AWSTemplateFormatVersion: 2010-09-09
Parameters:

  CertificateArn:
    Description: wildcard certificate for environment
    Type: String

  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  PublicSubnets:
    Description: Choose which subnets the Application Load Balancer should be deployed to
    Type: List<AWS::EC2::Subnet::Id>

  VPC:
    Type: AWS::EC2::VPC::Id
    Description: Choose which VPC the Application Load Balancer should be deployed to

Resources:

  LB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${EnvironmentName}
      Subnets: !Ref PublicSubnets
      SecurityGroups: [ !Ref SecurityGroup ]
      Type: application

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
        - CertificateArn: !Ref CertificateArn
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DefaultTargetGroup
      LoadBalancerArn: !Ref LB
      Port: 443
      Protocol: HTTPS

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub alb-sg-${EnvironmentName}
      GroupName: !Sub alb-sg-${EnvironmentName}
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
      VpcId: !Ref VPC

  DefaultTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub default-tg-${EnvironmentName}
      Port: 443
      Protocol: HTTPS
      ProtocolVersion: HTTP2
      VpcId: !Ref VPC

Outputs:

  DomainName:
    Description: The URL of the LB
    Value: !GetAtt LB.DNSName

  LoadBalancerARN:
    Description: The URL of the LB
    Value: !Ref LB

  ListenerARN:
    Description: A reference to a port 80 listener
    Value: !Ref Listener

  SecurityGroup:
    Description: A reference to the security group for load balancers
    Value: !Ref SecurityGroup